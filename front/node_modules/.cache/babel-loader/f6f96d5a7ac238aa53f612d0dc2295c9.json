{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport Login from \"./edocLogin\";\nimport EdocMain from \"./edocMain\";\nimport { useSelector } from \"react-redux\";\nimport { LOAD_USER_REQUEST } from \"../../reducers/user\"; // import edocMain from \"./edocMain\";\n// 컴포넌트를 import 할땐 항상 대문자 부터 이다.\n// 유저 정보에 의해 폼이 바뀌는 것\n// 이후 리덕스와 연결하여 state 중앙통제실을 만들어서 사용한다.\n\nvar Main = function Main() {\n  var _useSelector = useSelector(function (state) {\n    return state.me;\n  }),\n      me = _useSelector.me,\n      isLoggedIn = _useSelector.isLoggedIn; // 여기서 state 는 전체 state (reducer/index.js - state)\n  // console.log(\"? \", me, isLoggedIn);\n\n\n  return React.createElement(\"div\", null, isLoggedIn ? React.createElement(EdocMain, null) : React.createElement(Login, null));\n};\n\nMain.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var state;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"main\", context.store.getState());\n            state = context.store.getState();\n\n            if (state.me.me === null) {\n              console.log(\"linestateme\", state.me.me);\n              context.store.dispatch({\n                type: LOAD_USER_REQUEST\n              });\n            }\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Main;","map":{"version":3,"sources":["/Users/linepayroll/Desktop/nextApp/front/pages/edocument/index.js"],"names":["React","Login","EdocMain","useSelector","LOAD_USER_REQUEST","Main","state","me","isLoggedIn","getInitialProps","context","console","log","store","getState","dispatch","type"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,QAAkC,qBAAlC,C,CACA;AACA;AAEA;AACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,qBACUF,WAAW,CAAC,UAAAG,KAAK;AAAA,WAAIA,KAAK,CAACC,EAAV;AAAA,GAAN,CADrB;AAAA,MACTA,EADS,gBACTA,EADS;AAAA,MACLC,UADK,gBACLA,UADK,EAC0C;AAC3D;;;AACA,SAAO,iCAAMA,UAAU,GAAG,oBAAC,QAAD,OAAH,GAAkB,oBAAC,KAAD,OAAlC,CAAP;AACD,CAJD;;AAMAH,IAAI,CAACI,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,OAAO,CAACG,KAAR,CAAcC,QAAd,EAApB;AACMR,YAAAA,KAFe,GAEPI,OAAO,CAACG,KAAR,CAAcC,QAAd,EAFO;;AAGrB,gBAAIR,KAAK,CAACC,EAAN,CAASA,EAAT,KAAgB,IAApB,EAA0B;AACxBI,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,KAAK,CAACC,EAAN,CAASA,EAApC;AACAG,cAAAA,OAAO,CAACG,KAAR,CAAcE,QAAd,CAAuB;AAAEC,gBAAAA,IAAI,EAAEZ;AAAR,eAAvB;AACD;;AANoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeC,IAAf","sourcesContent":["import React from \"react\";\nimport Login from \"./edocLogin\";\nimport EdocMain from \"./edocMain\";\nimport { useSelector } from \"react-redux\";\nimport { LOAD_USER_REQUEST } from \"../../reducers/user\";\n// import edocMain from \"./edocMain\";\n// 컴포넌트를 import 할땐 항상 대문자 부터 이다.\n\n// 유저 정보에 의해 폼이 바뀌는 것\n// 이후 리덕스와 연결하여 state 중앙통제실을 만들어서 사용한다.\n\nconst Main = () => {\n  const { me, isLoggedIn } = useSelector(state => state.me); // 여기서 state 는 전체 state (reducer/index.js - state)\n  // console.log(\"? \", me, isLoggedIn);\n  return <div>{isLoggedIn ? <EdocMain /> : <Login />}</div>;\n};\n\nMain.getInitialProps = async context => {\n  console.log(\"main\", context.store.getState());\n  const state = context.store.getState();\n  if (state.me.me === null) {\n    console.log(\"linestateme\", state.me.me);\n    context.store.dispatch({ type: LOAD_USER_REQUEST });\n  }\n};\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}