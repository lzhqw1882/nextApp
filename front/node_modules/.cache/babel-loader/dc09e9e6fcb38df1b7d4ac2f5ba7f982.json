{"ast":null,"code":"import React from \"react\";\nimport { Table, Input, Button, Icon, Tabs } from \"antd\";\nimport Highlighter from \"react-highlight-words\"; // 검색기능\n\nexport var getColumnSearchProps = function getColumnSearchProps(dataIndex) {\n  return {\n    filterDropdown: function filterDropdown(_ref) {\n      var setSelectedKeys = _ref.setSelectedKeys,\n          selectedKeys = _ref.selectedKeys,\n          confirm = _ref.confirm,\n          clearFilters = _ref.clearFilters;\n      return React.createElement(\"div\", {\n        style: {\n          padding: 8\n        }\n      }, React.createElement(Input, {\n        ref: function ref(node) {\n          searchInput = node;\n        },\n        placeholder: \"Search \".concat(dataIndex),\n        value: selectedKeys[0],\n        onChange: function onChange(e) {\n          return setSelectedKeys(e.target.value ? [e.target.value] : []);\n        },\n        onPressEnter: function onPressEnter() {\n          return handleSearch(selectedKeys, confirm);\n        },\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: \"block\"\n        }\n      }), React.createElement(Button, {\n        type: \"primary\",\n        onClick: function onClick() {\n          return handleSearch(selectedKeys, confirm);\n        },\n        icon: \"search\",\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        }\n      }, \"Search\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return handleReset(clearFilters);\n        },\n        size: \"small\",\n        style: {\n          width: 90\n        }\n      }, \"Reset\"));\n    },\n    filterIcon: function filterIcon(filtered) {\n      return React.createElement(Icon, {\n        type: \"search\",\n        style: {\n          color: filtered ? \"#1890ff\" : undefined\n        }\n      });\n    },\n    onFilter: function onFilter(value, record) {\n      return record[dataIndex].toString().toLowerCase().includes(value.toLowerCase());\n    },\n    onFilterDropdownVisibleChange: function onFilterDropdownVisibleChange(visible) {\n      if (visible) {\n        setTimeout(function () {\n          return searchInput.select();\n        });\n      }\n    },\n    render: function render(text) {\n      return React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: \"#ffc069\",\n          padding: 0\n        },\n        searchWords: [searchText],\n        autoEscape: true,\n        textToHighlight: text.toString()\n      });\n    }\n  };\n};\nexport var handleSearch = function handleSearch(selectedKeys, confirm) {\n  confirm();\n  setSerchText(selectedKeys[0]);\n};\nexport var handleReset = function handleReset(clearFilters) {\n  clearFilters();\n  setSerchText(\"\");\n}; // 필터 기능\n\nexport var handleChange = function handleChange(pagination, filters, sorter) {\n  // console.log(\"Various parameters\", pagination, filters, sorter);\n  setFilterdInfo(filters);\n  setSortedInfo(sorter); // this.setState({\n  //   filteredInfo: filters,\n  //   sortedInfo: sorter\n  // });\n};","map":{"version":3,"sources":["/Users/linepayroll/Desktop/nextApp/front/functions/globalFunc.js"],"names":["Table","Input","Button","Icon","Tabs","Highlighter","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","searchText","setSerchText","handleChange","pagination","filters","sorter","setFilterdInfo","setSortedInfo"],"mappings":"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","sourcesContent":["import { Table, Input, Button, Icon, Tabs } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\n\n// 검색기능\nexport const getColumnSearchProps = dataIndex => ({\n  filterDropdown: ({\n    setSelectedKeys,\n    selectedKeys,\n    confirm,\n    clearFilters\n  }) => (\n    <div style={{ padding: 8 }}>\n      <Input\n        ref={node => {\n          searchInput = node;\n        }}\n        placeholder={`Search ${dataIndex}`}\n        value={selectedKeys[0]}\n        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n        onPressEnter={() => handleSearch(selectedKeys, confirm)}\n        style={{ width: 188, marginBottom: 8, display: \"block\" }}\n      />\n      <Button\n        type=\"primary\"\n        onClick={() => handleSearch(selectedKeys, confirm)}\n        icon=\"search\"\n        size=\"small\"\n        style={{ width: 90, marginRight: 8 }}\n      >\n        Search\n      </Button>\n      <Button\n        onClick={() => handleReset(clearFilters)}\n        size=\"small\"\n        style={{ width: 90 }}\n      >\n        Reset\n      </Button>\n    </div>\n  ),\n  filterIcon: filtered => (\n    <Icon type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />\n  ),\n  onFilter: (value, record) =>\n    record[dataIndex]\n      .toString()\n      .toLowerCase()\n      .includes(value.toLowerCase()),\n  onFilterDropdownVisibleChange: visible => {\n    if (visible) {\n      setTimeout(() => searchInput.select());\n    }\n  },\n  render: text => (\n    <Highlighter\n      highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n      searchWords={[searchText]}\n      autoEscape\n      textToHighlight={text.toString()}\n    />\n  )\n});\nexport const handleSearch = (selectedKeys, confirm) => {\n  confirm();\n  setSerchText(selectedKeys[0]);\n};\n\nexport const handleReset = clearFilters => {\n  clearFilters();\n  setSerchText(\"\");\n};\n\n// 필터 기능\nexport const handleChange = (pagination, filters, sorter) => {\n  // console.log(\"Various parameters\", pagination, filters, sorter);\n  setFilterdInfo(filters);\n  setSortedInfo(sorter);\n  // this.setState({\n  //   filteredInfo: filters,\n  //   sortedInfo: sorter\n  // });\n};\n"]},"metadata":{},"sourceType":"module"}