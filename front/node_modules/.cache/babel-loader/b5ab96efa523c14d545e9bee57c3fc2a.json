{"ast":null,"code":"var _jsxFileName = \"/Users/linepayroll/Desktop/nextApp/front/pages/_app.js\";\nimport React from \"react\";\nimport Head from \"next/head\";\nimport AppLayout from \"../components/AppLayout\"; // _app.js 는 모든 곳에 들어가는 곳이기다.\n// 리덕스는 모든 곳에서 공유해야 한다 따라서 이곳에서 정의.\n\nimport { Provider } from \"react-redux\"; //중앙통제실 역할\n\nimport { createStore, compose, applyMiddleware } from \"redux\"; //중앙통제실 역할\n\nimport reducer from \"../reducers\"; //npm i next-redux-wrapper\n// store를 넣어줄 구현이 안되있기 때문에 next에서 제공해주는 것을 사용\n\nimport withRedux from \"next-redux-wrapper\";\nimport sagaMiddleware from \"../saga/middleware\";\nimport rootSaga from \"../saga\";\n\nvar Line = function Line(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"\\uB77C\\uC778\\uD398\\uC774\\uB864 \\uC11C\\uBE44\\uC2A4\"), React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.2/antd.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"script\", {\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.2/antd.js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))));\n}; // export default Line;\n\n\nexport default withRedux(function (initialState, options) {\n  // 여기에다가 스토어 커스터마이징 (기능 추가)\n  // 리덕스가 콘솔에 노출되지 않도록 (보안)\n  var middlewares = [sagaMiddleware]; // console.log(process);\n\n  var enhancer = // process.emitWarning.NODE_ENV === \"production\" //개발일때만 디벨롭툴 사용하도록 (보안)\n  //   ? compose(applyMiddleware(...middlewares))\n  //   :\n  compose(applyMiddleware.apply(void 0, middlewares), typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\" ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.arguments(rootSaga); // const store = createStore(reducer, initialState);\n\n  return store;\n})(Line); // 고위컴포넌트, 하이오더컴포넌트 - 기존컴포넌트 기능을 확장해줌.","map":{"version":3,"sources":["/Users/linepayroll/Desktop/nextApp/front/pages/_app.js"],"names":["React","Head","AppLayout","Provider","createStore","compose","applyMiddleware","reducer","withRedux","sagaMiddleware","rootSaga","Line","Component","store","initialState","options","middlewares","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","f","arguments"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB,C,CAEA;AACA;;AAEA,SAASC,QAAT,QAAyB,aAAzB,C,CAAwC;;AACxC,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD,C,CAA+D;;AAC/D,OAAOC,OAAP,MAAoB,aAApB,C,CAEA;AACA;;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,QAAP,MAAqB,SAArB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA0B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACrC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADF,EAEE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,6DAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME;AAAQ,IAAA,GAAG,EAAC,4DAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,EAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADF,CADF;AAkBD,CAnBD,C,CAqBA;;;AACA,eAAeL,SAAS,CAAC,UAACM,YAAD,EAAeC,OAAf,EAA2B;AAClD;AACA;AACA,MAAMC,WAAW,GAAG,CAACP,cAAD,CAApB,CAHkD,CAIlD;;AACA,MAAMQ,QAAQ,GACZ;AACA;AACA;AACAZ,EAAAA,OAAO,CACLC,eAAe,MAAf,SAAmBU,WAAnB,CADK,EAEL,OAAOE,MAAP,KAAkB,WAAlB,IACEA,MAAM,CAACC,4BAAP,KAAwC,WAD1C,GAEID,MAAM,CAACC,4BAAP,EAFJ,GAGI,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GALA,CAJT;AAWA,MAAMP,KAAK,GAAGT,WAAW,CAACG,OAAD,EAAUO,YAAV,EAAwBG,QAAxB,CAAzB;AACAR,EAAAA,cAAc,CAACY,SAAf,CAAyBX,QAAzB,EAjBkD,CAmBlD;;AACA,SAAOG,KAAP;AACD,CArBuB,CAAT,CAqBZF,IArBY,CAAf,C,CAqBU","sourcesContent":["import React from \"react\";\nimport Head from \"next/head\";\nimport AppLayout from \"../components/AppLayout\";\n\n// _app.js 는 모든 곳에 들어가는 곳이기다.\n// 리덕스는 모든 곳에서 공유해야 한다 따라서 이곳에서 정의.\n\nimport { Provider } from \"react-redux\"; //중앙통제실 역할\nimport { createStore, compose, applyMiddleware } from \"redux\"; //중앙통제실 역할\nimport reducer from \"../reducers\";\n\n//npm i next-redux-wrapper\n// store를 넣어줄 구현이 안되있기 때문에 next에서 제공해주는 것을 사용\nimport withRedux from \"next-redux-wrapper\";\nimport sagaMiddleware from \"../saga/middleware\";\nimport rootSaga from \"../saga\";\nconst Line = ({ Component, store }) => {\n  return (\n    <div>\n      <Provider store={store}>\n        {/* 이 아래 부터 모든 store를 받는다. */}\n        <Head>\n          <title>라인페이롤 서비스</title>\n          <link\n            rel=\"stylesheet\"\n            href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.2/antd.css\"\n          />\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.2/antd.js\" />\n        </Head>\n        <AppLayout>\n          <Component />\n        </AppLayout>\n      </Provider>\n    </div>\n  );\n};\n\n// export default Line;\nexport default withRedux((initialState, options) => {\n  // 여기에다가 스토어 커스터마이징 (기능 추가)\n  // 리덕스가 콘솔에 노출되지 않도록 (보안)\n  const middlewares = [sagaMiddleware];\n  // console.log(process);\n  const enhancer =\n    // process.emitWarning.NODE_ENV === \"production\" //개발일때만 디벨롭툴 사용하도록 (보안)\n    //   ? compose(applyMiddleware(...middlewares))\n    //   :\n    compose(\n      applyMiddleware(...middlewares),\n      typeof window !== \"undefined\" &&\n        window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\"\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : f => f\n    );\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.arguments(rootSaga);\n\n  // const store = createStore(reducer, initialState);\n  return store;\n})(Line); // 고위컴포넌트, 하이오더컴포넌트 - 기존컴포넌트 기능을 확장해줌.\n"]},"metadata":{},"sourceType":"module"}