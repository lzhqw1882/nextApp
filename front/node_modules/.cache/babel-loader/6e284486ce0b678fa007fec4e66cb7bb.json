{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar initialState = {\n  edocumentList: [],\n  // 전자 결재 리스트\n  isLogging: false // 데이터 불러우는 중\n\n}; // 액션 정의\n// 결재 리스트 불러오기\n\nvar ADD_EDOC_REQUEST = \"ADD_EDOC_REQUEST\";\nvar ADD_EDOC_SECCESS = \"ADD_EDOC_SECCESS\";\nvar ADD_EDOC_FAILURE = \"ADD_EDOC_FAILURE\"; // 결재 리스트 업데이트 하기\n\nvar UPDATE_EDOC_REQUEST = \"UPDATE_EDOC_REQUEST\";\nvar UPDATE_EDOC_SECCESS = \"UPDATE_EDOC_SECCESS\";\nvar UPDATE_EDOC_FAILURE = \"UPDATE_EDOC_FAILURE\";\n\nvar reduser = function reduser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_EDOC_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLogging: true\n        });\n      }\n\n    case ADD_EDOC_SECCESS:\n      {\n        return _objectSpread({}, state, {\n          isLogging: false,\n          edocumentList: action.data\n        });\n      }\n\n    case ADD_EDOC_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLogging: false\n        });\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/linepayroll/Desktop/nextApp/front/reducers/edocument01.js"],"names":["initialState","edocumentList","isLogging","ADD_EDOC_REQUEST","ADD_EDOC_SECCESS","ADD_EDOC_FAILURE","UPDATE_EDOC_REQUEST","UPDATE_EDOC_SECCESS","UPDATE_EDOC_FAILURE","reduser","state","action","type","data","reducer"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,EADI;AACA;AACnBC,EAAAA,SAAS,EAAE,KAFQ,CAEF;;AAFE,CAArB,C,CAKA;AACA;;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;AACA,IAAMC,gBAAgB,GAAG,kBAAzB,C,CAEA;;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,gBAAL;AAAuB;AACrB,iCACKO,KADL;AAEER,UAAAA,SAAS,EAAE;AAFb;AAID;;AACD,SAAKE,gBAAL;AAAuB;AACrB,iCACKM,KADL;AAEER,UAAAA,SAAS,EAAE,KAFb;AAGED,UAAAA,aAAa,EAAEU,MAAM,CAACE;AAHxB;AAKD;;AACD,SAAKR,gBAAL;AAAuB;AACrB,iCACKK,KADL;AAEER,UAAAA,SAAS,EAAE;AAFb;AAID;AAnBH;AAqBD,CAtBD;;AAwBA,eAAeY,OAAf","sourcesContent":["const initialState = {\n  edocumentList: [], // 전자 결재 리스트\n  isLogging: false // 데이터 불러우는 중\n};\n\n// 액션 정의\n// 결재 리스트 불러오기\nconst ADD_EDOC_REQUEST = \"ADD_EDOC_REQUEST\";\nconst ADD_EDOC_SECCESS = \"ADD_EDOC_SECCESS\";\nconst ADD_EDOC_FAILURE = \"ADD_EDOC_FAILURE\";\n\n// 결재 리스트 업데이트 하기\nconst UPDATE_EDOC_REQUEST = \"UPDATE_EDOC_REQUEST\";\nconst UPDATE_EDOC_SECCESS = \"UPDATE_EDOC_SECCESS\";\nconst UPDATE_EDOC_FAILURE = \"UPDATE_EDOC_FAILURE\";\n\nconst reduser = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_EDOC_REQUEST: {\n      return {\n        ...state,\n        isLogging: true\n      };\n    }\n    case ADD_EDOC_SECCESS: {\n      return {\n        ...state,\n        isLogging: false,\n        edocumentList: action.data\n      };\n    }\n    case ADD_EDOC_FAILURE: {\n      return {\n        ...state,\n        isLogging: false\n      };\n    }\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}