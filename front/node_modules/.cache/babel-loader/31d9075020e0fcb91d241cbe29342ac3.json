{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/linepayroll/Desktop/nextApp/front/pages/edocument/edocLogin.js\";\nimport React, { useState, userEffect } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport { useInput } from \"../../functions/UseInput\";\nimport { useDispatch } from \"react-redux\";\nimport { LOG_IN } from \"../../reducers/user\";\n\nvar edocLogin = function edocLogin(props) {\n  // hooks state\n  // const [state명, state변경함수] = useState(\"default값\")\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var onChagneId = function onChagneId(e) {\n    // state변경함수에 넘어오는 parm (e) value 값을 해준다.\n    // react에서 render되는 조건은 state가 변경되었을때마다\n    setId(e.target.value);\n  };\n\n  var password = useInput(\"\");\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    console.log(\"loginbtn Clicked\", id, password.value);\n  }; // 액션\n\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOG_IN,\n      data: {\n        nickname: \"JW\"\n      }\n    });\n  }, []); // 2번째 인자에 아무것도 안들어가면 componentdidmount랑 같다.\n\n  return React.createElement(\"div\", {\n    style: {\n      padding: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: \"login-form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"user\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }),\n    placeholder: \"ID\",\n    required: true,\n    onChange: onChagneId // input 은 항상 value랑 onchange가 짝이 되야 한다\n    ,\n    name: \"id\",\n    value: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Input, _extends({\n    prefix: React.createElement(Icon, {\n      type: \"lock\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }),\n    placeholder: \"PASSWORD\",\n    required: true\n  }, password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778\"))));\n};\n\nexport default edocLogin;","map":{"version":3,"sources":["/Users/linepayroll/Desktop/nextApp/front/pages/edocument/edocLogin.js"],"names":["React","useState","userEffect","Form","Icon","Input","Button","Checkbox","useInput","useDispatch","LOG_IN","edocLogin","props","id","setId","onChagneId","e","target","value","password","onSubmit","preventDefault","console","log","dispatch","useEffect","type","data","nickname","padding","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,MAApD;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,qBAAvB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACzB;AACA;AAFyB,kBAGLX,QAAQ,CAAC,EAAD,CAHH;AAAA;AAAA,MAGlBY,EAHkB;AAAA,MAGdC,KAHc;;AAIzB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,CAAC,EAAI;AACtB;AACA;AACAF,IAAAA,KAAK,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAL;AACD,GAJD;;AAMA,MAAMC,QAAQ,GAAGX,QAAQ,CAAC,EAAD,CAAzB;;AAEA,MAAMY,QAAQ,GAAG,SAAXA,QAAW,CAAAJ,CAAC,EAAI;AACpBA,IAAAA,CAAC,CAACK,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCV,EAAhC,EAAoCM,QAAQ,CAACD,KAA7C;AACD,GAHD,CAZyB,CAiBzB;;;AACA,MAAMM,QAAQ,GAAGf,WAAW,EAA5B;AACAgB,EAAAA,SAAS,CAAC,YAAM;AACdD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEhB,MADC;AAEPiB,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN;AAFC,KAAD,CAAR;AAMD,GAPQ,EAON,EAPM,CAAT,CAnByB,CA0BjB;;AAER,SACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAET,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAE;AAAEU,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV;AAEE,IAAA,WAAW,EAAC,IAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,QAAQ,EAAEf,UAJZ,CAIwB;AAJxB;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,KAAK,EAAEF,EANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAE;AAAEiB,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,QAAQ;AAHV,KAIMX,QAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAXF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CAnBF,CADF,CADF;AA8BD,CA1DD;;AA4DA,eAAeR,SAAf","sourcesContent":["import React, { useState, userEffect } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport { useInput } from \"../../functions/UseInput\";\nimport { useDispatch } from \"react-redux\";\nimport { LOG_IN } from \"../../reducers/user\";\nconst edocLogin = props => {\n  // hooks state\n  // const [state명, state변경함수] = useState(\"default값\")\n  const [id, setId] = useState(\"\");\n  const onChagneId = e => {\n    // state변경함수에 넘어오는 parm (e) value 값을 해준다.\n    // react에서 render되는 조건은 state가 변경되었을때마다\n    setId(e.target.value);\n  };\n\n  const password = useInput(\"\");\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(\"loginbtn Clicked\", id, password.value);\n  };\n\n  // 액션\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: LOG_IN,\n      data: {\n        nickname: \"JW\"\n      }\n    });\n  }, []); // 2번째 인자에 아무것도 안들어가면 componentdidmount랑 같다.\n\n  return (\n    <div style={{ padding: 20 }}>\n      <Form className=\"login-form\" onSubmit={onSubmit}>\n        <div>\n          <Input\n            prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            placeholder=\"ID\"\n            required\n            onChange={onChagneId} // input 은 항상 value랑 onchange가 짝이 되야 한다\n            name=\"id\"\n            value={id}\n          />\n        </div>\n        <div>\n          <Input\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            placeholder=\"PASSWORD\"\n            required\n            {...password}\n          />\n        </div>\n        <div>\n          {/* <button type=\"submit\" > 로그인 </button> 을 antd 입히면 아래와 같이 htmlType 으로 해줘야한다. */}\n          <Button type=\"primary\" htmlType=\"submit\">\n            로그인\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default edocLogin;\n"]},"metadata":{},"sourceType":"module"}