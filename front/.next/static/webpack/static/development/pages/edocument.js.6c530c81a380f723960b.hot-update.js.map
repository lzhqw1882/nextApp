{"version":3,"file":"static/webpack/static/development/pages/edocument.js.6c530c81a380f723960b.hot-update.js","sources":["webpack:///./pages/edocument/edoc/edoc01.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Table, Input, Button, Icon, Tabs } from \"antd\";\nimport Link from \"next/link\";\nimport Highlighter from \"react-highlight-words\";\nimport { useSelector } from \"react-redux\";\nimport { LIST_EDEG1CODE } from \"../../../globalValue\";\nimport Edit01 from \"../editor/edit01\";\nconst edoc01 = () => {\n  const [searchText, setSerchText] = useState(\"\");\n  const [filteredInfo, setFilterdInfo] = useState({});\n  const [sortedInfo, setSortedInfo] = useState({});\n  const [clickedItem, setClickedItem] = useState({});\n  const [editVisible, setEditVisible] = useState(false);\n  const [editGubun, setEditGubun] = useState(\"N\");\n  const { edoc, isLogging } = useSelector(state => state.edocument);\n  const { me } = useSelector(state => state.me);\n  // 데이터 리덕스에서 가져와서 나누기\n  const doc =\n    edoc !== null &&\n    edoc.filter(\n      item =>\n        (item.EDSTCode === me.SUSTCODE ||\n          item.EJBEFJOINSTCODE === me.SUSTCODE) &&\n        item.ERSTCODE !== me.SUSTCODE &&\n        item.EDEJSeq === item.EJSEQ &&\n        (item.EDEG1Code >= 100 && item.EDEG1Code < 200)\n    );\n  const doc2 =\n    edoc !== null &&\n    edoc.filter(\n      item =>\n        item.EJAFTJOINSTCODE === me.SUSTCODE &&\n        item.EJSEQ === item.EDEJSeq &&\n        (item.EJSIGNGUBUN === 1 || item.EJSIGNGUBUN === 4) &&\n        (item.EDEG1Code >= 100 && item.EDEG1Code < 200)\n    );\n  const doc3 =\n    edoc !== null &&\n    edoc.filter(\n      item =>\n        item.EJAFTJOINSTCODE === me.SUSTCODE &&\n        item.EJSEQ === item.EDEJSeq &&\n        item.EJSIGNGUBUN !== 1 &&\n        item.EJSIGNGUBUN !== 4 &&\n        (item.EDEG1Code >= 100 && item.EDEG1Code < 200)\n    );\n\n  var searchInput = null;\n\n  // 검색기능\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => handleSearch(selectedKeys, confirm)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button\n          onClick={() => handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => searchInput.select());\n      }\n    },\n    render: text => (\n      <Highlighter\n        highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n        searchWords={[searchText]}\n        autoEscape\n        textToHighlight={text.toString()}\n      />\n    )\n  });\n  const handleSearch = (selectedKeys, confirm) => {\n    confirm();\n    setSerchText(selectedKeys[0]);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSerchText(\"\");\n  };\n\n  // 필터 기능\n  const handleChange = (pagination, filters, sorter) => {\n    // console.log(\"Various parameters\", pagination, filters, sorter);\n    setFilterdInfo(filters);\n    setSortedInfo(sorter);\n    // this.setState({\n    //   filteredInfo: filters,\n    //   sortedInfo: sorter\n    // });\n  };\n  const filtedEdeg1code = LIST_EDEG1CODE.map((item, index) => {\n    return {\n      text: item.name,\n      value: item.name\n    };\n  });\n\n  const columns = [\n    {\n      title: \"구분\",\n      dataIndex: \"EDEG1Name\",\n      key: \"EDEG1Name\",\n      width: \"10%\",\n      filters: filtedEdeg1code.filter(\n        item =>\n          item.text === \"인사\" || item.text === \"업무\" || item.text === \"총무\"\n      ),\n      filteredValue: filteredInfo.EDEG1Name || null,\n      onFilter: (value, record) => {\n        // console.log(record, value, record.EDEG1Name.includes(value));\n        return record.EDEG1Name.includes(value);\n      }\n    },\n    {\n      title: \"제목\",\n      dataIndex: \"EDTitle\",\n      key: \"EDTitle\",\n      width: \"50%\",\n      ...getColumnSearchProps(\"EDTitle\")\n    },\n    {\n      title: \"기안일\",\n      dataIndex: \"EDDateTime\",\n      key: \"EDDateTime\",\n      width: \"20%\",\n      sorter: (a, b) => new Date(a.EDDateTime) - new Date(b.EDDateTime),\n      sortOrder: sortedInfo.columnKey === \"EDDateTime\" && sortedInfo.order\n    },\n    {\n      title: \"결재자\",\n      dataIndex: \"EJAFTJOINSTNAME\",\n      key: \"EJAFTJOINSTNAME\",\n      width: \"10%\",\n      ...getColumnSearchProps(\"EJAFTJOINSTNAME\")\n    },\n    {\n      title: \"상태\",\n      dataIndex: \"EJSIGNNAME\",\n      key: \"EJSIGNNAME\",\n      width: \"10%\"\n    }\n  ];\n  const columns2 = [\n    {\n      title: \"구분\",\n      dataIndex: \"EDEG1Name\",\n      key: \"EDEG1Name\",\n      width: \"10%\",\n      filters: filtedEdeg1code.filter(\n        item =>\n          item.text === \"인사\" || item.text === \"업무\" || item.text === \"총무\"\n      ),\n      filteredValue: filteredInfo.EDEG1Name || null,\n      onFilter: (value, record) => {\n        // console.log(record, value, record.EDEG1Name.includes(value));\n        return record.EDEG1Name.includes(value);\n      }\n    },\n    {\n      title: \"제목\",\n      dataIndex: \"EDTitle\",\n      key: \"EDTitle\",\n      width: \"50%\",\n      ...getColumnSearchProps(\"EDTitle\")\n    },\n    {\n      title: \"기안일\",\n      dataIndex: \"EDDateTime\",\n      key: \"EDDateTime\",\n      width: \"20%\",\n      sorter: (a, b) => new Date(a.EDDateTime) - new Date(b.EDDateTime),\n      sortOrder: sortedInfo.columnKey === \"EDDateTime\" && sortedInfo.order\n    },\n    {\n      title: \"기안자\",\n      dataIndex: \"EJBEFJOINSTNAME\",\n      key: \"EJBEFJOINSTNAME\",\n      width: \"10%\",\n      ...getColumnSearchProps(\"EJBEFJOINSTNAME\")\n    },\n    {\n      title: \"상태\",\n      dataIndex: \"EJSIGNNAME\",\n      key: \"EJSIGNNAME\",\n      width: \"10%\"\n    }\n  ];\n  const columns3 = [\n    {\n      title: \"구분\",\n      dataIndex: \"EDEG1Name\",\n      key: \"EDEG1Name\",\n      width: \"10%\",\n      filters: filtedEdeg1code.filter(\n        item =>\n          item.text === \"인사\" || item.text === \"업무\" || item.text === \"총무\"\n      ),\n      filteredValue: filteredInfo.EDEG1Name || null,\n      onFilter: (value, record) => {\n        // console.log(record, value, record.EDEG1Name.includes(value));\n        return record.EDEG1Name.includes(value);\n      }\n    },\n    {\n      title: \"제목\",\n      dataIndex: \"EDTitle\",\n      key: \"EDTitle\",\n      width: \"50%\",\n      ...getColumnSearchProps(\"EDTitle\")\n    },\n    {\n      title: \"기안일\",\n      dataIndex: \"EDDateTime\",\n      key: \"EDDateTime\",\n      width: \"20%\",\n      sorter: (a, b) => new Date(a.EDDateTime) - new Date(b.EDDateTime),\n      sortOrder: sortedInfo.columnKey === \"EDDateTime\" && sortedInfo.order\n    },\n    {\n      title: \"기안자\",\n      dataIndex: \"EDSTNAME\",\n      key: \"EDSTNAME\",\n      width: \"10%\",\n      ...getColumnSearchProps(\"EDSTNAME\")\n    },\n    {\n      title: \"상태\",\n      dataIndex: \"EJSIGNNAME\",\n      key: \"EJSIGNNAME\",\n      width: \"10%\"\n    }\n  ];\n  const itemClicked = async (record, index) => {\n    console.log(\"itemClicked\", record, index);\n    await setClickedItem(record);\n    await setEditGubun(\"U\"); // UPDATE\n    await setEditVisible(true);\n  };\n  const TabPane = Tabs.TabPane;\n  console.log(\"edoc @!!\", edoc);\n  return isLogging || edoc === null ? null : (\n    <Tabs type=\"card\">\n      <TabPane tab=\"내 결재함\" key=\"1\">\n        {editVisible ? (\n          <Edit01\n            clickedItem={clickedItem}\n            setEditVisible={setEditVisible}\n            gubun={editGubun}\n            me={me}\n          />\n        ) : (\n          <Table\n            columns={columns}\n            dataSource={doc}\n            onChange={handleChange}\n            onRow={(record, rowIndex) => {\n              return {\n                onClick: () => itemClicked(record, rowIndex)\n              };\n            }}\n          />\n        )}\n      </TabPane>\n      <TabPane tab=\"업무 요청\" key=\"2\">\n        <Table columns={columns2} dataSource={doc2} />\n      </TabPane>\n      <TabPane tab=\"전자 문서함\" key=\"3\">\n        <Table columns={columns3} dataSource={doc3} />\n      </TabPane>\n    </Tabs>\n  );\n  // return <div />;\n};\n\nexport default edoc01;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAOA;AAAA;AAPA;AAAA;AACA;AADA;AAQA;AAAA;AARA;AACA;AACA;AAQA;AAGA;AAAA;AAOA;AAGA;AAAA;AAMA;AAGA;AAAA;AAQA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAVA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAUA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAHA;AA5BA;AAqCA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AADA;AAnDA;AAAA;AACA;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AACA;AACA;AACA;AApBA;AAwBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AASA;AACA;AACA;AACA;AAnCA;AAuCA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AACA;AACA;AACA;AApBA;AAwBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AASA;AACA;AACA;AACA;AAnCA;AAuCA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AACA;AACA;AACA;AApBA;AAwBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AASA;AACA;AACA;AACA;AAnCA;AAuCA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AARA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}